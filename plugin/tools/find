#!/usr/bin/env bash
# Unified search tool for skills and practices
# Wraps find-skills and find-practices for unified discovery

set -euo pipefail

# Determine script location
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Parse flags
SEARCH_SKILLS=true
SEARCH_PRACTICES=true
SCOPE_FLAGS=()
PATTERN=""

show_usage() {
    cat << EOF
Usage: find [OPTIONS] [PATTERN]

Search for skills and practices across cipherpowers and upstream sources.

OPTIONS:
    --skills-only       Search skills only (delegates to find-skills)
    --practices-only    Search practices only (delegates to find-practices)
    --local             Search local (cipherpowers) only
    --upstream          Search upstream (superpowers/marketplace) only
    -h, --help          Show this help message

PATTERN:
    Optional search pattern (case-insensitive)
    Without pattern: lists all available skills and practices
    With pattern: searches in frontmatter and content

EXAMPLES:
    find                       # List everything
    find commit                # Find skills and practices about commits
    find --skills-only testing # Find only skills about testing
    find --local               # Search only local skills and practices
    find --practices-only --upstream  # Search only upstream practices

OUTPUT FORMAT:
    [skill] path/to/SKILL.md
    [practice] path/to/practice.md - Description

EOF
}

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_usage
            exit 0
            ;;
        --skills-only)
            SEARCH_PRACTICES=false
            shift
            ;;
        --practices-only)
            SEARCH_SKILLS=false
            shift
            ;;
        --local|--upstream)
            SCOPE_FLAGS+=("$1")
            shift
            ;;
        *)
            PATTERN="$1"
            shift
            ;;
    esac
done

# Build arguments to pass to individual tools
TOOL_ARGS=("${SCOPE_FLAGS[@]}")
if [ -n "$PATTERN" ]; then
    TOOL_ARGS+=("$PATTERN")
fi

# Track if we found anything
FOUND_ANYTHING=false

# Search skills
if [ "$SEARCH_SKILLS" = true ]; then
    if output=$("$SCRIPT_DIR/find-skills" "${TOOL_ARGS[@]}" 2>/dev/null); then
        if [ -n "$output" ]; then
            # Replace [cipherpowers] and [superpowers] with [skill]
            echo "$output" | sed 's/\[cipherpowers\]/[skill]/' | sed 's/\[superpowers\]/[skill]/'
            FOUND_ANYTHING=true
        fi
    fi
fi

# Search practices
if [ "$SEARCH_PRACTICES" = true ]; then
    if output=$("$SCRIPT_DIR/find-practices" "${TOOL_ARGS[@]}" 2>/dev/null); then
        if [ -n "$output" ]; then
            # Replace [cipherpowers] and [marketplace] with [practice]
            echo "$output" | sed 's/\[cipherpowers\]/[practice]/' | sed 's/\[marketplace\]/[practice]/'
            FOUND_ANYTHING=true
        fi
    fi
fi

# If nothing found, provide helpful message
if [ "$FOUND_ANYTHING" = false ]; then
    if [ -n "$PATTERN" ]; then
        echo "No skills or practices found matching: $PATTERN" >&2
        exit 1
    else
        echo "No skills or practices available" >&2
        exit 1
    fi
fi
